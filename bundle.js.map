{"version":3,"sources":["webpack:///webpack/bootstrap 0b85cf21b33741b91baa","webpack:///./es6/main.js","webpack:///./es6/Snake.js","webpack:///./es6/Rabbit.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;ACtCA;;AACA;;;;KACU;AACF,cADE,IACF,CAAY,EAAZ,EAAgB;+BADd,MACc;;AACZ,cAAK,EAAL,GAAU,EAAV,CADY;MAAhB;;kBADE;;kCAKO,UAAuC;iBAA7B,kEAAY,CAAC,CAAD,EAAI,CAAJ,iBAAiB;iBAAT,uBAAS;;;AAE5C,qBAAQ,QAAR,CAAiB,WAAW,UAAU,CAAV,CAAX,EAA0B,WAAW,UAAU,CAAV,CAAX,EAAyB,QAApE,EAA+E,QAA/E,EAF4C;AAG5C,qBAAQ,UAAR,CAAmB,WAAW,UAAU,CAAV,CAAX,EAA0B,WAAW,UAAU,CAAV,CAAX,EAAyB,QAAtE,EAAiF,QAAjF,EAH4C;;;;mCAOtC,aAAa,UAAU,OAAO;;AAEpC,kBAAK,QAAL,GAAgB,QAAhB,CAFoC;AAGpC,iBAAI,WAAW,cAAa,QAAb,CAHqB;;AAKpC,iBAAI,SAAS,SAAS,cAAT,CAAwB,KAAK,EAAL,CAAjC,CALgC;AAMpC,iBAAI,UAAU,OAAO,UAAP,CAAkB,IAAlB,CAAV,CANgC;AAOpC,oBAAO,KAAP,GAAe,QAAf,CAPoC;AAQpC,oBAAO,MAAP,GAAgB,QAAhB,CARoC;AASpC,qBAAQ,SAAR,GAAoB,KAApB,CAToC;;AAWpC,kBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,WAAJ,EAAiB,GAAjC,EACA;AACI,sBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,WAAJ,EAAiB,GAAjC,EACA;AACI,yBAAI,YAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,CADR;AAEI,0BAAK,QAAL,CAAc,KAAK,QAAL,EAAe,SAA7B,EAAwC,OAAxC,EAFJ;kBADA;cAFJ;;;;kCAWK,IAAI,MAAM;AACf,kBAAK,KAAL,GAAa,iBAAU,EAAV,EAAc,IAAd,CAAb,CADe;AAEf,iBAAI,SAAS,SAAS,cAAT,CAAwB,KAAK,EAAL,CAAjC,CAFW;AAGf,iBAAI,UAAU,OAAO,UAAP,CAAkB,IAAlB,CAAV,CAHW;AAIf,qBAAQ,SAAR,GAAoB,SAApB,CAJe;AAKf,kBAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,IAAJ,EAAU,GAA1B,EACI;AACI,qBAAI,YAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,CADR;AAEI,sBAAK,QAAL,CAAc,KAAK,QAAL,EAAe,SAA7B,EAAwC,OAAxC,EAFJ;cADJ;;;;mCAOM,UAAU;;AAEhB,iBAAI,YAAY,EAAZ,CAFY;AAGhB,uBAAU,CAAV,IAAe,MAAM,KAAK,MAAL,MAAiB,WAAW,CAAX,CAAjB,CAHL;AAIhB,uBAAU,CAAV,IAAe,MAAM,KAAK,MAAL,MAAiB,WAAW,CAAX,CAAjB,CAJL;AAKhB,uBAAU,CAAV,IAAe,KAAK,KAAL,CAAW,UAAU,CAAV,CAAX,CAAf,CALgB;AAMhB,uBAAU,CAAV,IAAe,KAAK,KAAL,CAAW,UAAU,CAAV,CAAX,CAAf,CANgB;;AAQhB,iBAAI,SAAS,SAAS,cAAT,CAAwB,KAAK,EAAL,CAAjC,CARY;AAShB,iBAAI,UAAU,OAAO,UAAP,CAAkB,IAAlB,CAAV,CATY;AAUhB,qBAAQ,SAAR,GAAoB,SAApB,CAVgB;AAWhB,kBAAK,QAAL,CAAc,KAAK,QAAL,EAAe,SAA7B,EAAwC,OAAxC,EAXgB;;;;kCAeX,UAAU;;;;;YA7DjB;;;AAkEV,KAAI,OAAO,IAAI,IAAJ,CAAS,MAAT,CAAP;AACA,MAAK,SAAL,CAAe,EAAf,EAAmB,EAAnB,EAAuB,SAAvB;AACA,MAAK,QAAL,CAAc,GAAd,EAAmB,CAAnB;AACA,MAAK,SAAL,CAAe,EAAf,E;;;;;;;;;;;;;;KCvES,wBACT,SADS,KACT,CAAY,EAAZ,EAAgB,IAAhB,EAAqB;2BADZ,OACY;;AACjB,UAAK,EAAL,GAAU,EAAV,CADiB;AAEjB,UAAK,IAAL,GAAY,IAAI,GAAJ,EAAZ,CAFiB;AAGjB,UAAK,IAAL,CAAU,GAAV,CAAc,IAAd,EAHiB;EAArB,C;;;;;;;;;;;;;;KCDS,0BACT,SADS,MACT,CAAY,EAAZ,EAAgB,IAAhB,EAAqB;2BADZ,QACY;;AACjB,UAAK,EAAL,GAAU,EAAV,CADiB;AAEjB,UAAK,IAAL,GAAY,IAAI,GAAJ,CAAQ,IAAR,CAAZ,CAFiB;EAArB,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0b85cf21b33741b91baa\n **/","import {Snake} from './Snake.js';\nimport {Rabbit} from './Rabbit.js';\n    class Game {\n        constructor(id) {\n            this.id = id;\n        }\n        \n        drawCell(cellSize, cellIndex = [0, 0], context) {\n\n            context.fillRect(cellSize * cellIndex[0],  cellSize * cellIndex[1], cellSize , cellSize );\n            context.strokeRect(cellSize * cellIndex[0],  cellSize * cellIndex[1], cellSize , cellSize);\n\n        }\n\n        drawField(cellQantity, cellSize, color) {\n\n            this.cellSize = cellSize;\n            let fullsize = cellQantity *cellSize;\n\n            let canvas = document.getElementById(this.id);\n            let context = canvas.getContext('2d');\n            canvas.width = fullsize;\n            canvas.height = fullsize;\n            context.fillStyle = color;\n\n            for (let i = 0; i < cellQantity; i++) \n            {\n                for (let j = 0; j < cellQantity; j++) \n                {\n                    let cellIndex = [i, j];\n                    this.drawCell(this.cellSize, cellIndex, context);\n                    \n                }                \n            }            \n        }\n\n        addSnake(id, body) {\n            this.snake = new Snake(id, body);\n            let canvas = document.getElementById(this.id);\n            let context = canvas.getContext('2d');\n            context.fillStyle = '#006A55';\n            for (let i = 0; i < body; i++) \n                {\n                    let cellIndex = [i, 0];\n                    this.drawCell(this.cellSize, cellIndex, context);\n                }   \n        }\n\n        addRabbit(maxIndex) {\n            // this.rabbit = new Rabbit(id, body);\n            let cellIndex = [];\n            cellIndex[0] = 0.5 + Math.random() * (maxIndex + 1);\n            cellIndex[1] = 0.5 + Math.random() * (maxIndex + 1);\n            cellIndex[0] = Math.round(cellIndex[0]);\n            cellIndex[1] = Math.round(cellIndex[1]);\n\n            let canvas = document.getElementById(this.id);\n            let context = canvas.getContext('2d');\n            context.fillStyle = '#534ED9';\n            this.drawCell(this.cellSize, cellIndex, context);\n\n        }\n\n        gameStep(interval) {\n        //todo Add interval. At every step check snake and rabbits params and draw it.\n        }\n    }\n\nlet game = new Game('game');\n    game.drawField(20, 20, '#FFD640');\n    game.addSnake('1', 4);\n    game.addRabbit(20);\n\n\n/** WEBPACK FOOTER **\n ** ./es6/main.js\n **/","export class Snake {\n    constructor(id, body){\n        this.id = id;\n        this.body = new Set();\n        this.body.add(body);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./es6/Snake.js\n **/","export class Rabbit {\n    constructor(id, body){\n        this.id = id;\n        this.body = new Set(body);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./es6/Rabbit.js\n **/"],"sourceRoot":""}